Tidy
========================================================
author: Wim van der Ham
width: 1440
height: 900

Tidy Data
========================================================

1. Each variable is in a column
1. Each observation is a row
1. Each value is a cell

tidy package
========================================================

1. `pivot_longer()` (formerly `gather()`) Collapse multiple columns into key-value pairs
1. `pivot_wider()`  (formerly `spread()`) Spread a key-value pair across multiple columns
1. `separate()` Split single column into multiple columns

pivot_longer
========================================================

![gather](./gather.jpg)

pivot_longer - Arguments
========================================================

```{r, include=FALSE}
library(tidyverse)
library(stringr)
iris <- as_tibble(iris)
```

```{r, eval=FALSE}
df %>%
  pivot_longer(<columns>, names_to = "name", values_to = "value")
```

pivot_wider
========================================================

![spread](./spread.jpg)

pivot_wider - Arguments
========================================================

```{r, eval=FALSE}
df %>%
  pivot_wider(names_from = <key column>, values_from = <value column>)
```

Separate
========================================================

![separate](./separate.jpg)

Example - Load example dataset
========================================================

```{r}
who <- as_tibble(tidyr::who)
```

Example - Gather columns with treathments codes
========================================================

```{r}
who1 <- who %>% 
  pivot_longer(
    new_sp_m014:newrel_f65, names_to = "key", 
    values_to = "value", values_drop_na = TRUE
  )
who1
```

Example - Count them to check keys
========================================================

```{r}
who1 %>% 
  group_by(key) %>%
  summarise(n = n())
```

Example - Fix typo in key
========================================================

```{r}
who2 <- who1 %>% 
  mutate(key = str_replace(key, "newrel", "new_rel"))
who2
```

Example - Check if fixed
========================================================

```{r}
who2 %>% 
  count(key)
```

Example - Seperate the key value into columns
========================================================

```{r}
who3 <- who2 %>% 
  separate(key, c("new", "type", "sexage"), sep = "_")
who3
```

Example - Drop columns
========================================================

```{r}
who4 <- who3 %>% 
  select(-new, -iso2, -iso3)
who4
```

Example - Split sexage into sex and age
========================================================

```{r}
who5 <- who4 %>% 
  separate(sexage, c("sex", "age"), sep = 1)
who5
```

Create Summaries for Multiple Columns
========================================================

```{r}
iris %>%
  pivot_longer(1:4, names_to = "key", values_to = "value") %>%
  group_by(Species, key) %>%
  summarise(
    mean_value = mean(value)
  )
```

Strategy
========================================================

1. Calculate a summary value for 1 column
2. Gather all the columns you want to calculate the summary value for
3. Add the `key` value to the `group_by()` or add a `group_by` if there is none
4. Replace the column name in step 1 with `value`

Calculate for 1 column
========================================================

```{r}
iris %>%
  group_by(Species) %>%
  summarise(
    mean_value = mean(Petal.Length)
  )
```

Gather Columns for Calculation
========================================================

```{r}
iris %>%
  pivot_longer(1:4, names_to = "key", values_to = "value")
```

Create Summaries for Multiple Columns
========================================================

```{r}
iris %>%
  pivot_longer(1:4, names_to = "key", values_to = "value") %>%
  group_by(Species, key) %>%
  summarise(
    mean_value = mean(value)
  )
```
